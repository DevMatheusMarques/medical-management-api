version: '3.8'

networks:
  backend:
    driver: bridge

services:
  db:
    networks:
      - backend
    image: postgres:15
    container_name: medical-management-db
    restart: always
    environment:
      POSTGRES_DB: medical_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Rk92bK!3s8vA0w
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    networks:
      - backend
    build: .
    container_name: medical-management-api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/medical_management
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Rk92bK!3s8vA0w
    ports:
      - "8080:8080"

volumes:
  pgdata:
